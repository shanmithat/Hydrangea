# -*- coding: utf-8 -*-
"""AbusiveTam_Hydrangea.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/121TqkdLCgGz7HsQEogisYG2VFxemQA77

Loading Files
"""

import pandas as pd
awt_train = pd.read_csv('AWT_train.csv')
awt_dev = pd.read_csv('AWT_dev.csv')
awt_test = pd.read_csv('AWT_test_without_labels.csv')
awt_label = pd.read_csv('AWT_dev.tsv', delimiter='\t')

"""Simple Transformers"""

!pip install simpletransformers

"""Classification Model"""

from simpletransformers.classification import ClassificationModel
model=ClassificationModel('bert','bert-base-multilingual-uncased',num_labels=2,use_cuda=True,args={
        "reprocess_input_data" : True,
        "use_cached_eval_features":False,
        "overwrite_output_dir": True,
        "num_train_epochs": 2})

from simpletransformers.classification import ClassificationModel

# Initialize a RoBERTa model
model = ClassificationModel('roberta', 'roberta-base', num_labels=2, use_cuda=True, args={
    "reprocess_input_data": True,
    "use_cached_eval_features": False,
    "overwrite_output_dir": True,
    "num_train_epochs": 2
})

import pandas as pd
from simpletransformers.classification import ClassificationModel

# Example DataFrame (make sure to replace this with your actual data)
# train_df = pd.DataFrame({
#     'text': ['Example sentence 1', 'Example sentence 2'],
#     'labels': [0, 1]
# })

# Initialize a DistilBERT model
model = ClassificationModel(
    'distilbert',
    'distilbert-base-uncased',  # DistilBERT model name
    num_labels=2,
    use_cuda=True,
    args={
        "reprocess_input_data": True,
        "use_cached_eval_features": False,
        "overwrite_output_dir": True,
        "num_train_epochs": 3,  # Adjust based on your needs
        "train_batch_size": 16,  # Adjust based on your GPU memory
        "eval_batch_size": 16,
        "learning_rate": 4e-5,  # Default learning rate, can be adjusted
        "max_seq_length": 128,  # Adjust based on your input length
        "save_steps": 1000,  # Save model every 1000 steps
        "logging_steps": 500,  # Log every 500 steps
    }
)

"""Model Training"""

model.train_model(awt_train)

"""Validation"""

result, model_outputs, wrong_predictions = model.eval_model(awt_dev)
print(result)

"""Prediction"""

predictions, raw_outputs = model.predict(awt_test['Text'].tolist())
print(predictions)

"""Performance"""

from sklearn import preprocessing
import pandas as pd

le = preprocessing.LabelEncoder()
le.fit(awt_label['Class'].tolist())
awt_label['label_le'] = le.transform(awt_label['Class'].tolist())
y_label = awt_label['label_le'].tolist()

import warnings
warnings.filterwarnings("ignore")
warnings.simplefilter(action='ignore', category=FutureWarning)

from sklearn.metrics import classification_report
print(classification_report(y_label, predictions))

pip install pandas

import pandas as pd

# Your provided list
data = [1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1
,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0
,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,0,1,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1
,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1
,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1
,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1
,0,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0
,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1
,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0
,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,1,1,1,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1
,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1
,0,1,0,1,0,0,0,1,1,1,0,1,0,0,0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1
,1,0,0,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1
,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1
,1,0,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1
,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1
,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0]




# Convert the list to a DataFrame
df = pd.DataFrame(data, columns=['Labels'])

# Save the DataFrame to a CSV file
df.to_csv('hydrangea_Malayalam_run3.csv', index=False)